library(tidyr)
library(dplyr)
library(tidyverse)
library(janitor)
library(scales)
library(lubridate)
library(ggplot2)
library(shiny)
library(tidyverse)
library(shinydashboard)
totals <- read.csv("/Users/hiyabhandari/Desktop/BIS15W2025_group13/conditions_states.csv")
library(shiny)
library(tidyverse)
library(shinydashboard)
totals <- read.csv("/Users/stephanie/Desktop/BIS15W2025_group13/conditions_states.csv")
ui <- dashboardPage(
dashboardHeader(title = "COVID-19 Death Trends"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("chart-line")),
radioButtons("condition_select",
"Select Condition Group",
choices = c("Respiratory diseases", "Circulatory diseases"),
selected = "Respiratory diseases"),
radioButtons("age_group_select",
"Select Age Group",
choices = unique(totals$age_group)[!unique(totals$age_group) %in% c("Not stated", "All ages")],
selected = "0-24")
)
),
dashboardBody(
fluidRow(
box(
title = "COVID-19 Deaths Trend",
status = "primary", solidHeader = TRUE, width = 12,
plotOutput("death_line_plot", height = 500)
)
),
fluidRow(
box(
title = "Data Summary",
status = "info", solidHeader = TRUE, width = 12,
tableOutput("summary_table")
)
)
)
)
server <- function(input, output, session) {
filtered_data <- reactive({
totals %>%
filter(condition_group == input$condition_select,
age_group == input$age_group_select) %>%
drop_na(covid_19_deaths, start_date) %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"))
})
output$death_line_plot <- renderPlot({
data <- filtered_data()
ggplot(data, aes(x = start_date, y = covid_19_deaths, color = condition)) +
geom_line() +
labs(title = paste("COVID-19 Death Trend for", input$condition_select, "in Age Group", input$age_group_select),
x = "Date", y = "COVID-19 Deaths") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
output$summary_table <- renderTable({
data <- filtered_data()
summary_data <- data %>%
group_by(condition, age_group) %>%
summarise(total_deaths = sum(covid_19_deaths, na.rm = TRUE), .groups = 'drop')
summary_data
})
}
shinyApp(ui, server)
library(shiny)
library(tidyverse)
library(shinydashboard)
totals <- read.csv("/Users/stephanie/Desktop/BIS15W2025_group13/conditions_states.csv")
ui <- dashboardPage(
dashboardHeader(title = "COVID-19 Death Trends"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("chart-line")),
radioButtons("condition_select",
"Select Condition Group",
choices = c("Respiratory diseases", "Circulatory diseases"),
selected = "Respiratory diseases"),
radioButtons("age_group_select",
"Select Age Group",
choices = unique(totals$age_group)[!unique(totals$age_group) %in% c("Not stated", "All ages")],
selected = "0-24")
)
),
dashboardBody(
fluidRow(
box(
title = "COVID-19 Deaths Trend",
status = "primary", solidHeader = TRUE, width = 12,
plotOutput("death_line_plot", height = 500)
)
),
fluidRow(
box(
title = "Data Summary",
status = "info", solidHeader = TRUE, width = 12,
tableOutput("summary_table")
)
)
)
)
server <- function(input, output, session) {
filtered_data <- reactive({
totals %>%
filter(condition_group == input$condition_select,
age_group == input$age_group_select) %>%
drop_na(covid_19_deaths, start_date) %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%Y"))
})
output$death_line_plot <- renderPlot({
data <- filtered_data()
ggplot(data, aes(x = start_date, y = covid_19_deaths, color = condition)) +
geom_line() +
labs(title = paste("COVID-19 Death Trend for", input$condition_select, "in Age Group", input$age_group_select),
x = "Date", y = "COVID-19 Deaths") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
output$summary_table <- renderTable({
data <- filtered_data()
summary_data <- data %>%
group_by(condition, age_group) %>%
summarise(total_deaths = sum(covid_19_deaths, na.rm = TRUE), .groups = 'drop')
summary_data
})
}
shinyApp(ui, server)
library("tidyverse")
library("dplyr")
library("janitor")
library("lubridate")
library("ggplot2")
library("RColorBrewer")
options(scipen=999)
Weekly <- read_csv("/Users/stephanie/Desktop/BIS15W2025_group13/Stephanie/WeeklyCases.csv") %>% clean_names()
View(Weekly)
Weekly %>%
select(start_date, new_historic_cases)
Weekly %>%
select(start_date, new_historic_cases, state) %>%
```
Weekly %>%
select(start_date, new_historic_cases, state) %>%
pivot_wider(names_from = state,
values_from = new_historic_cases) %>%
mutate(total = sum(c_across(AK:WY))) %>%
select(start_date, total) %>%
pivot_longer(!start_date,
names_to = "totalUS",
values_to = "new_historic")
