monthly %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "keep") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths in States of Interest",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1))
dev.off()
png(filename = "alldeaths.png", width = 800, height = 480, units = "px")
monthly %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "keep") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths in States of Interest",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1))
dev.off()
png(filename = "alldeaths.png", width = 800, height = 480, units = "px")
monthly %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "keep") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths in States of Interest",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1))
png(filename = "alldeaths.png", width = 800, height = 480, units = "px")
monthly %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "keep") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths in States of Interest",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1)
title = element_text(size=rel(1.5)))
png(filename = "alldeaths.png", width = 800, height = 480, units = "px")
monthly %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "keep") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths in States of Interest",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=rel(1.5)))
monthly %>%
filter(condition_group=="Circulatory diseases") %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "drop") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths Associated with Circulatory Disease",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
axis.text.x = element_text(angle = 70, hjust = 1))
monthly %>%
filter(condition_group=="Circulatory diseases") %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "drop") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths Associated with Circulatory Disease",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=rel(1.5))
monthly %>%
filter(condition_group=="Circulatory diseases") %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "drop") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths Associated with Circulatory Disease",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=rel(1.5)))
monthly %>%
filter(condition_group=="Circulatory diseases") %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "drop") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths Associated with Circulatory Disease",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=15))
png(filename = "alldeaths.png", width = 800, height = 480, units = "px")
monthly %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "keep") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths in States of Interest",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=15))
png(filename = "allcirculatory.png", width = 800, height = 480, units = "px")
monthly %>%
filter(condition_group=="Circulatory diseases") %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "drop") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths Associated with Circulatory Disease",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=15))
png(filename = "allobesity.png", width = 800, height = 480, units = "px")
monthly %>%
filter(condition_group=="Obesity") %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "drop") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths Associated with Obesity",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=15))
totals %>%
filter(age_group!="All Ages" &
age_group!="Not stated") %>%
group_by(age_group, condition_group) %>%
summarise(deaths=sum(covid_19_deaths, na.rm = T),
.groups = 'drop') %>%
ggplot(aes(x=age_group, y=deaths, fill=condition_group))+
geom_col(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
scale_fill_brewer(palette = "Paired", labels = function(x) str_wrap(x, width = 40))+ #applies text in the legend wrapping at ~40 characters?
theme_minimal()+
labs(title = "% of COVID-19 Deaths Associated with Various Conditions, by Age",
x= "Age",
y=NULL,
fill="Condition Type")+
theme(title = element_text(size=15))
totals %>%
filter(age_group!="All Ages" &
age_group!="Not stated") %>%
group_by(age_group, condition_group) %>%
summarise(deaths=sum(covid_19_deaths, na.rm = T),
.groups = 'drop') %>%
ggplot(aes(x=age_group, y=deaths, fill=condition_group))+
geom_col(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
scale_fill_brewer(palette = "Paired", labels = function(x) str_wrap(x, width = 40))+ #applies text in the legend wrapping at ~40 characters?
theme_minimal()+
labs(title = "% of COVID-19 Deaths Associated with Various Conditions, by Age",
x= "Age",
y=NULL,
fill="Condition Type")
png(filename = "pctbystate.png", width = 800, height = 480, units = "px")
totals %>%
group_by(state, condition_group) %>%
summarise(deaths=sum(covid_19_deaths, na.rm = T),
.groups = 'drop') %>%
ggplot(aes(x=state, y=deaths, fill=condition_group))+
geom_col(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
scale_fill_brewer(palette = "Paired", labels = function(x) str_wrap(x, width = 40))+ #applies text wrapping in the legend at ~40 characters?
theme_minimal()+
labs(title = "% of COVID-19 Deaths Associated with Various Conditions, by State",
x= "State",
y=NULL,
fill="Condition Type")+
theme(axis.text.x = element_text(angle=70,
margin = margin(t=15)),
title = element_text(size=15))
png(filename = "pctbyage.png", width = 800, height = 480, units = "px")
totals %>%
filter(age_group!="All Ages" &
age_group!="Not stated") %>%
group_by(age_group, condition_group) %>%
summarise(deaths=sum(covid_19_deaths, na.rm = T),
.groups = 'drop') %>%
ggplot(aes(x=age_group, y=deaths, fill=condition_group))+
geom_col(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
scale_fill_brewer(palette = "Paired", labels = function(x) str_wrap(x, width = 40))+ #applies text in the legend wrapping at ~40 characters?
theme_minimal()+
labs(title = "% of COVID-19 Deaths Associated with Various Conditions, by Age",
x= "Age",
y=NULL,
fill="Condition Type")
png(filename = "pctbyage.png", width = 800, height = 480, units = "px")
totals %>%
filter(age_group!="All Ages" &
age_group!="Not stated") %>%
group_by(age_group, condition_group) %>%
summarise(deaths=sum(covid_19_deaths, na.rm = T),
.groups = 'drop') %>%
ggplot(aes(x=age_group, y=deaths, fill=condition_group))+
geom_col(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
scale_fill_brewer(palette = "Paired", labels = function(x) str_wrap(x, width = 40))+ #applies text in the legend wrapping at ~40 characters?
theme_minimal()+
labs(title = "% of COVID-19 Deaths Associated with Various Conditions, by Age",
x= "Age",
y=NULL,
fill="Condition Type")+
theme(title = element_text(size=15))
png(filename = "pctbyyear.png", width = 800, height = 480, units = "px")
monthly %>%
group_by(year, condition_group) %>%
summarise(deaths=sum(covid_19_deaths, na.rm = T),
.groups = 'drop') %>%
ggplot(aes(x=year, y=deaths, fill=condition_group))+
geom_col(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
scale_fill_brewer(palette = "Paired", labels = function(x) str_wrap(x, width = 40))+ #applies text in the legend wrapping at ~40 characters?
theme_minimal()+
labs(title = "% of COVID-19 Deaths Associated with Various Conditions, by Year",
x= "Year",
y=NULL,
fill="Condition Type")+
theme(title = element_text(size=15))
png(filename = "alldeaths.png", width = 1200, height = 720, units = "px") #turning this into a png
monthly %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "keep") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths in States of Interest",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=15))
png(filename = "allcirculatory.png", width = 1200, height = 720, units = "px")
monthly %>%
filter(condition_group=="Circulatory diseases") %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "drop") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths Associated with Circulatory Disease",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=15))
png(filename = "allobesity.png", width = 1200, height = 720, units = "px")
monthly %>%
filter(condition_group=="Obesity") %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "drop") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths Associated with Obesity",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=15))
png(filename = "pctbystate.png", width = 1200, height = 720, units = "px")
totals %>%
group_by(state, condition_group) %>%
summarise(deaths=sum(covid_19_deaths, na.rm = T),
.groups = 'drop') %>%
ggplot(aes(x=state, y=deaths, fill=condition_group))+
geom_col(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
scale_fill_brewer(palette = "Paired", labels = function(x) str_wrap(x, width = 40))+ #applies text wrapping in the legend at ~40 characters?
theme_minimal()+
labs(title = "% of COVID-19 Deaths Associated with Various Conditions, by State",
x= "State",
y=NULL,
fill="Condition Type")+
theme(axis.text.x = element_text(angle=70,
margin = margin(t=15)),
title = element_text(size=15))
png(filename = "pctbyage.png", width = 1200, height = 720, units = "px")
totals %>%
filter(age_group!="All Ages" &
age_group!="Not stated") %>%
group_by(age_group, condition_group) %>%
summarise(deaths=sum(covid_19_deaths, na.rm = T),
.groups = 'drop') %>%
ggplot(aes(x=age_group, y=deaths, fill=condition_group))+
geom_col(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
scale_fill_brewer(palette = "Paired", labels = function(x) str_wrap(x, width = 40))+ #applies text in the legend wrapping at ~40 characters?
theme_minimal()+
labs(title = "% of COVID-19 Deaths Associated with Various Conditions, by Age",
x= "Age",
y=NULL,
fill="Condition Type")+
theme(title = element_text(size=15))
png(filename = "pctbyyear.png", width = 1200, height = 720, units = "px")
monthly %>%
group_by(year, condition_group) %>%
summarise(deaths=sum(covid_19_deaths, na.rm = T),
.groups = 'drop') %>%
ggplot(aes(x=year, y=deaths, fill=condition_group))+
geom_col(position = position_fill())+
scale_y_continuous(labels = scales::percent)+
scale_fill_brewer(palette = "Paired", labels = function(x) str_wrap(x, width = 40))+ #applies text in the legend wrapping at ~40 characters?
theme_minimal()+
labs(title = "% of COVID-19 Deaths Associated with Various Conditions, by Year",
x= "Year",
y=NULL,
fill="Condition Type")+
theme(title = element_text(size=15))
png(file = "plots/alldeaths.png", width = 1200, height = 720, units = "px") #turning this into a png
monthly %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "keep") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths in States of Interest",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=15))
png(file = "plots/alldeaths.png", width = 1200, height = 720, units = "px") #turning this into a png
monthly %>%
group_by(state, start_date) %>%
summarise(total_covid_deaths=sum(covid_19_deaths, na.rm = T),
.groups = "keep") %>%
ggplot(aes(x = start_date, y = total_covid_deaths, color = state, group = state)) +
geom_line(linewidth = 0.9) +
theme_minimal()+
scale_colour_brewer(palette = "Paired")+
labs(title = "COVID-19 Deaths in States of Interest",
x = "Date",
y = "Deaths",
color = "State") +
scale_x_date(labels = scales::date_format("%b %Y"), breaks = "2 months") +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 70, hjust = 1),
title = element_text(size=15))
library(shiny); runApp('conditions_breakdown_app.R')
runApp('conditions_breakdown_app.R')
runApp('conditions_breakdown_app.R')
runApp('conditions_breakdown_app.R')
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
totals <- read.csv("data/totals_states_conditions.csv")
monthly <- read.csv("data/monthly_states_conditions.csv")
source("~/.active-rstudio-document", echo=TRUE)
ui <- fluidPage(
radioButtons("d",
"Select Dataset",
choices = c("Total" = "totals",
"Monthly" = "monthly"),
selected = "Total"
)
radioButtons("y",
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
?updateRadioButtons()
plotOutput("plot")
)
dataset <- selected_data()
ui <- fluidPage(
# Dataset selector
selectInput("dataset", "Select Dataset", choices = c("Dataset 1" = "totals1", "Dataset 2" = "totals2")),
# Dynamic Y-axis variable
selectInput("y", "Select Condition Group", choices = NULL),
# Dynamic X-axis variable
selectInput("x", "Select X Variable", choices = NULL),
plotOutput("plot")
)
# Reactive dataset selection
selected_data <- reactive({
get(input$dataset)  # Retrieves selected dataset dynamically
})
source("~/.active-rstudio-document", echo=TRUE)
# Generate plot
output$plot <- renderPlot({
req(input$x, input$y)  # Ensure inputs are selected
selected_data() %>%
filter(condition_group == input$y) %>%
group_by(.data[[input$x]]) %>%
summarise(deaths = sum(covid_19_deaths, na.rm = TRUE), .groups = 'drop') %>%
ggplot(aes(x = .data[[input$x]], y = deaths, fill = input$y)) +
geom_col() +
theme_minimal() +
labs(x = input$x, y = "Total Deaths", title = paste("COVID-19 Deaths by", input$x))
})
ui <- fluidPage(
# Dataset selector
selectInput("dataset", "Select Dataset", choices = c("Dataset 1" = "totals1", "Dataset 2" = "totals2")),
# Dynamic Y-axis variable
selectInput("y", "Select Condition Group", choices = NULL),
# Dynamic X-axis variable
selectInput("x", "Select X Variable", choices = NULL),
plotOutput("plot")
)
source("~/.active-rstudio-document", echo=TRUE)
